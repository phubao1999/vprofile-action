name: vprofile actions
on: workflow_dispatch
env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: vprofileapp
  ECS_CLUSTER: vprofile-eks

jobs:
  Testing:
    run-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Maven Test
        run: mvn test

      - name: CheckStyle
        run: mvn checkstyle:checkstyle

      # Setup Java 11 to be default
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      # Setup Sonar-Scanner
      - name: Setup Sonar Qube
        uses: warchant/setup-sonarqube@v7

      # Run Sonar Scan
      - name: Sonar Scan
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.sources=src/
          -Dsonar.junit.reportPaths=target/surefire-reports
          -Dsonar.jacoco.reportPaths=target/jacoco.exec
          -Dsonar.java.checkstyle.reportPaths=target/site/checkstyle-result.xml
          -Dsonar.java.binaries=target/test-classes/com/visualpathit/account

      # Check the quality gate status
      - name: Check Quality Gate
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_URL: ${{ secrets.SONAR_URL }}

  BUILD_AND_PUBLISH:
    needs: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkouts@v4

      - name: Build & Upload Image to ECR
        uses: appleboy/docker-ecr-action@master
        with:
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: ${{ env.ECR_REPOSITORY }}
          region: ${{ env.AWS_REGION }}
          tag: latest,${{ github.run_number }}
          deamin_off: false
          dockerfile: ./Dockerfile
          context: ./
